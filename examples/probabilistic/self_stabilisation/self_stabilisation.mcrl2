% This file describes the self-stabilisation protocol of Israeli
% and Jalfon. See "Token management schemes and random walks yield 
% self-stabilizating mutual exclusion. 1990". This example was taken
% from the PRISM Benchmark Suite: 
% http://www.prismmodelchecker.org/casestudies/self-stabilisation.php
%
% In this case there are 5 processes. Each process can hold a token
% and they are interconnected in a ring fasion, the communication is
% bidirectional. A process decides whether to send its token to the
% next or previous process in the ring with probability of 1/2 for each
% decision.
% 
% Hector Joao Rivera Verduzco. November 2016.

act send_token:Int#Int;
    read_token:Int#Int;
    comm_token:Int#Int;

%   token:
proc P(id:Int, token:Bool, prev:Int, next:Int)=
        (token == true)->(
                           dist b:Bool[1/2].
                           b-> send_token(id,next).P(id,false,prev,next)
                           <>  send_token(id,prev).P(id,false,prev,next)
                         )+
        % It is always possible to receive a token from prev or next
        read_token(next,id).P(id,true,prev,next) + 
        read_token(prev,id).P(id,true,prev,next)
    ;
               
init 
	allow({comm_token},
    comm({send_token | read_token -> comm_token},
         P(0,true,4,1)||
         P(1,true,0,2)||
         P(2,true,1,3)||
         P(3,true,2,4)||
         P(4,true,3,0)
    ));
